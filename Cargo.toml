[package]
name = "chanism-blog"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { version = "0.7", optional = true}
console_error_panic_hook = { version = "0.1", optional = true }
leptos = { version = "0.6", features = ["nightly"] }
leptos_axum = { version = "0.6", optional = true }
leptos_meta = { version = "0.6", features = ["nightly"] }
leptos_router = { version = "0.6", features = ["nightly"] }
tokio = { version = "1", features = ["macros", "rt-multi-thread"], optional = true }
tower = { version = "0.4", optional = true, features = ["util"] }
tower-http = { version = "0.5", features = ["fs", "trace"], optional = true }
sqlx = { version = "0.8.2", features = ["postgres", "runtime-tokio-rustls", "chrono"], optional = true }
wasm-bindgen = "0.2.99"
thiserror = "1"
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["fmt"] }
tracing-wasm = { version = "0.2", optional = true }
http = "1"
once_cell = "1.10.0"
icondata = "0.4.0"
leptos_icons = "0.3.1"
web-sys = { version = "0.3.72", features = ["DomRect", "DomRectList", "IntersectionObserver", "IntersectionObserverEntry", "IntersectionObserverInit", "Document", "HtmlElement", "Window", "Storage", "MediaQueryList", "File", "FileList"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
dotenv = "0.15.0"
resend-rs = "0.9.1"
leptos_toaster = { version = "0.1.7", features = ["builtin_toast"] }
oauth2 = "4.4.2"
utoipa-swagger-ui = "8.0.3"
utoipa = "5.2.0"
slug = "0.1.6"
jsonwebtoken = { version = "9", optional = true }
chrono = "0.4.39"
uuid = { version = "1.11.0", features = ["v4", "fast-rng", "macro-diagnostics"]}
reqwest = { version = "0.12.11", optional = false, features = ["multipart"]}
tokio-util = { version = "0.7.13", optional = true }
google-cloud-auth = { version = "0.17.2", optional = true }
google-cloud-storage = { version = "0.23.0", optional = true }
gloo = { version = "0.11.0", features = ["futures"] }

[features]
default = ["ssr", "hydrate"]
hydrate = [
    "leptos/hydrate", 
    "leptos_meta/hydrate", 
    "leptos_router/hydrate", 
    "leptos_toaster/hydrate",
    "dep:tracing-wasm",
    "dep:console_error_panic_hook"
]
ssr = [
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "tracing",
    "leptos_toaster/ssr",
    "dep:leptos_axum",
    "dep:axum",
    "dep:jsonwebtoken",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:sqlx",
    "dep:google-cloud-auth",
    "dep:tokio-util",
    "dep:google-cloud-storage"
]

[package.metadata.cargo-all-features]
denylist = [
    "axum",
    "tower",
    "tower-http",
    "tokio",
    "sqlx",
    "leptos_axum",
    "jsonwebtoken",
]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "chanism-blog"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# Activates the tailwind build
tailwind-input-file = "style/tailwind.css"
tailwind-config-file = "tailwind.config.js"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
